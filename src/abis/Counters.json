{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/libraries/Counters.sol\":{\"keccak256\":\"0x5d436d451d282b54231856295ad2227a2b85ff3696f1314dfb75b7b5344f5541\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d09778839c1215cc53fa8a40de5d8121035c7cbea176566cb7a9ad8b9ee157\",\"dweb:/ipfs/QmbokBbSaVAhCx8bN52AtckdmeqdGEGN5MxKaTT2RVzURP\"]},\"project:/src/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x12b218cdb912fd623381629f53fa2ed90f323a78c116a7ab801d3813d1c12df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548c26b1565ef87cb13bbbe3879327d3fcecd7d9ea446e605d84cb6e0badccbc\",\"dweb:/ipfs/QmRA7BcWJm9RA57sDYJqbjLLhDET8xYsZM7gYugHzbCLYB\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c86fa634a3bb4b08a3186ca507b88b75b9c989b379963b3e81c3d2a2db81bcef64736f6c634300080a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c86fa634a3bb4b08a3186ca507b88b75b9c989b379963b3e81c3d2a2db81bcef64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "654:730:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "654:730:10:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport './SafeMath.sol';\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\n\n library Counters {\n    using SafeMath for uint256; \n\n // build your own variable type with the keyword 'struct'\n\n    // is a mechanism to keep track of our values of arithmetic changes\n    // to our code \n    struct Counter {\n        uint256 _value;    \n    }\n\n    // we want to find the current value of a count \n    function current(Counter storage counter ) internal view returns(uint256) {\n        return counter._value;\n    } \n\n    // funtion that always increments by 1 \n    function increment(Counter storage counter) internal {\n        counter._value += 1;\n    }\n\n    // function that always decrement by 1 \n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}",
  "sourcePath": "/home/gokberk/Desktop/nft-bazaar/src/contracts/libraries/Counters.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        831
      ],
      "SafeMath": [
        964
      ]
    },
    "id": 832,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 780,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 832,
        "sourceUnit": 965,
        "src": "56:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 782,
          "nodeType": "StructuredDocumentation",
          "src": "82:569:10",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 831,
        "linearizedBaseContracts": [
          831
        ],
        "name": "Counters",
        "nameLocation": "662:8:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 785,
            "libraryName": {
              "id": 783,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 964,
              "src": "683:8:10"
            },
            "nodeType": "UsingForDirective",
            "src": "677:27:10",
            "typeName": {
              "id": 784,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 788,
            "members": [
              {
                "constant": false,
                "id": 787,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "896:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 788,
                "src": "888:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 786,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "888:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "870:7:10",
            "nodeType": "StructDefinition",
            "scope": 831,
            "src": "863:50:10",
            "visibility": "public"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "1046:38:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 796,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "1063:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 787,
                    "src": "1063:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 795,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "1056:21:10"
                }
              ]
            },
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "981:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1005:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "989:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 789,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 788,
                      "src": "989:7:10"
                    },
                    "referencedDeclaration": 788,
                    "src": "989:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:26:10"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "1037:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:9:10"
            },
            "scope": 831,
            "src": "972:112:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "1188:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 806,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "1198:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 787,
                      "src": "1198:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1216:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1198:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:19:10"
                }
              ]
            },
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1144:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1170:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "1154:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 802,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 801,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 788,
                      "src": "1154:7:10"
                    },
                    "referencedDeclaration": 788,
                    "src": "1154:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:25:10"
            },
            "returnParameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:0:10"
            },
            "scope": 831,
            "src": "1135:89:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "1327:55:10",
              "statements": [
                {
                  "expression": {
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 819,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "1337:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 787,
                      "src": "1337:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1373:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 822,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 816,
                            "src": "1354:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 787,
                          "src": "1354:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 883,
                        "src": "1354:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1354:21:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1337:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:38:10"
                }
              ]
            },
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1283:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1309:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "1293:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 815,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 814,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 788,
                      "src": "1293:7:10"
                    },
                    "referencedDeclaration": 788,
                    "src": "1293:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:25:10"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:10"
            },
            "scope": 831,
            "src": "1274:108:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 832,
        "src": "654:730:10",
        "usedErrors": []
      }
    ],
    "src": "32:1352:10"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        831
      ],
      "SafeMath": [
        964
      ]
    },
    "id": 832,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 780,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 832,
        "sourceUnit": 965,
        "src": "56:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 782,
          "nodeType": "StructuredDocumentation",
          "src": "82:569:10",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 831,
        "linearizedBaseContracts": [
          831
        ],
        "name": "Counters",
        "nameLocation": "662:8:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 785,
            "libraryName": {
              "id": 783,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 964,
              "src": "683:8:10"
            },
            "nodeType": "UsingForDirective",
            "src": "677:27:10",
            "typeName": {
              "id": 784,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 788,
            "members": [
              {
                "constant": false,
                "id": 787,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "896:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 788,
                "src": "888:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 786,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "888:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "870:7:10",
            "nodeType": "StructDefinition",
            "scope": 831,
            "src": "863:50:10",
            "visibility": "public"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "1046:38:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 796,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "1063:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 787,
                    "src": "1063:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 795,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "1056:21:10"
                }
              ]
            },
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "981:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1005:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "989:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 789,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 788,
                      "src": "989:7:10"
                    },
                    "referencedDeclaration": 788,
                    "src": "989:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:26:10"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "1037:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:9:10"
            },
            "scope": 831,
            "src": "972:112:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "1188:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 806,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "1198:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 808,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 787,
                      "src": "1198:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1216:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1198:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:19:10"
                }
              ]
            },
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1144:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1170:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "1154:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 802,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 801,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 788,
                      "src": "1154:7:10"
                    },
                    "referencedDeclaration": 788,
                    "src": "1154:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:25:10"
            },
            "returnParameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:0:10"
            },
            "scope": 831,
            "src": "1135:89:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "1327:55:10",
              "statements": [
                {
                  "expression": {
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 819,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 816,
                        "src": "1337:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 787,
                      "src": "1337:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1373:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 822,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 816,
                            "src": "1354:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 787,
                          "src": "1354:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 883,
                        "src": "1354:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1354:21:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1337:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:38:10"
                }
              ]
            },
            "id": 830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1283:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1309:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "1293:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 815,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 814,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 788,
                      "src": "1293:7:10"
                    },
                    "referencedDeclaration": 788,
                    "src": "1293:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$788_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:25:10"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:10"
            },
            "scope": 831,
            "src": "1274:108:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 832,
        "src": "654:730:10",
        "usedErrors": []
      }
    ],
    "src": "32:1352:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-26T06:36:59.180Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}